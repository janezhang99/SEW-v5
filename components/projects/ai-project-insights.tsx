"use client"

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Bot, AlertTriangle, Lightbulb, TrendingUp, ChevronRight } from "lucide-react"

interface AIProjectInsightsProps {
  projectId: string
  projectName: string
  className?: string
}

export function AIProjectInsights({ projectId, projectName, className }: AIProjectInsightsProps) {
  // In a real implementation, these insights would be generated by the AI
  // based on the project data and activity
  const insights = [
    {
      id: "timeline-risk",
      title: "Timeline Risk Detected",
      description: "Tree planting schedule may be affected by upcoming weather patterns",
      type: "risk",
      priority: "high",
    },
    {
      id: "stakeholder-opportunity",
      title: "Stakeholder Opportunity",
      description: "Local school district has expressed interest in educational components",
      type: "opportunity",
      priority: "medium",
    },
    {
      id: "similar-project",
      title: "Similar Project Success",
      description: "Recent urban greening project in Portland achieved 15% temperature reduction",
      type: "benchmark",
      priority: "low",
    },
  ]

  return (
    <Card className={className}>
      <CardHeader className="pb-2">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <div className="bg-primary/10 p-1.5 rounded-md">
              <Bot className="h-4 w-4 text-primary" />
            </div>
            <CardTitle className="text-lg">AI Project Insights</CardTitle>
          </div>
          <Button variant="ghost" size="sm" asChild>
            <a href={`/projects/${projectId}/ai-assistant`}>
              View All
              <ChevronRight className="ml-1 h-4 w-4" />
            </a>
          </Button>
        </div>
      </CardHeader>
      <CardContent className="pt-2">
        <div className="space-y-3">
          {insights.map((insight) => (
            <Card key={insight.id} className="overflow-hidden">
              <div className="p-3">
                <div className="flex items-start gap-3">
                  <div
                    className={`p-1.5 rounded-md ${
                      insight.type === "risk"
                        ? "bg-red-100 text-red-600"
                        : insight.type === "opportunity"
                          ? "bg-green-100 text-green-600"
                          : "bg-blue-100 text-blue-600"
                    }`}
                  >
                    {insight.type === "risk" ? (
                      <AlertTriangle className="h-4 w-4" />
                    ) : insight.type === "opportunity" ? (
                      <Lightbulb className="h-4 w-4" />
                    ) : (
                      <TrendingUp className="h-4 w-4" />
                    )}
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center justify-between">
                      <h4 className="font-medium text-sm">{insight.title}</h4>
                      <Badge
                        variant="outline"
                        className={`text-xs ${
                          insight.priority === "high"
                            ? "bg-red-50 text-red-700 border-red-200"
                            : insight.priority === "medium"
                              ? "bg-yellow-50 text-yellow-700 border-yellow-200"
                              : "bg-blue-50 text-blue-700 border-blue-200"
                        }`}
                      >
                        {insight.priority}
                      </Badge>
                    </div>
                    <p className="text-xs text-muted-foreground mt-1">{insight.description}</p>
                  </div>
                </div>
              </div>
            </Card>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}
